# -*- coding: utf-8 -*-
"""Iot mini project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yl49lBesY9OSXWl5MORuT032DlM7rz5v
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import pickle 
import warnings
warnings.filterwarnings('ignore')

Data_path = "/content/drive/MyDrive/Iot mini project/Fertilizer Prediction.csv"

df = pd.read_csv(Data_path)
df.head()

# Statistical info
df.describe()

df.isnull().sum()

X = df.drop(columns = ['Fertilizer Name', 'Potassium', 'Temparature'], axis=1)
y = df['Fertilizer Name']

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [2,3])], remainder='passthrough')
X = np.array(ct.fit_transform(X))
print(X[1])

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier(n_estimators= 100, criterion = 'gini' , random_state= 42)
classifier.fit(X_train, y_train)

# Predicting the test set results
y_pred = classifier.predict(X_test)
# Making the Confusion Matrix and Calculating the Accuracy
from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
acc5 = accuracy_score(y_test, y_pred)
print("Random Forest Classification's Accuracy:", acc5)

y_random_test = {'Temparature':[35], 'Humidity ':[64], 'Moisture':[30], 'Soil Type': ['Red'],'Crop Type':['Tobacco'],'Nitrogen':[39],'Potassium':[1], 'Phosphorous':[16] }
test_df = pd.DataFrame.from_dict(y_random_test)
X_test = test_df.drop(columns = [ 'Potassium', 'Temparature'], axis=1)
X_test = np.array(ct.transform(X_test))
y_pred = classifier.predict(X_test)

print(y_pred)